-- CHANGE WITH CAUTION: This is a generated code file generated by https://github.com/Haskell-OpenAPI-Code-Generator/Haskell-OpenAPI-Client-Code-Generator.

{-# LANGUAGE OverloadedStrings #-}
{-# LANGUAGE DeriveGeneric #-}

-- | Contains the types generated from the schema GuardianBackup
module ElectionGuard.API.Guardian.Generated.Types.GuardianBackup where

import qualified Prelude as GHC.Integer.Type
import qualified Prelude as GHC.Maybe
import qualified Data.Aeson
import qualified Data.Aeson as Data.Aeson.Types
import qualified Data.Aeson as Data.Aeson.Types.FromJSON
import qualified Data.Aeson as Data.Aeson.Types.ToJSON
import qualified Data.Aeson as Data.Aeson.Types.Internal
import qualified Data.ByteString.Char8
import qualified Data.ByteString.Char8 as Data.ByteString.Internal
import qualified Data.Functor
import qualified Data.Scientific
import qualified Data.Text
import qualified Data.Text.Internal
import qualified Data.Time.Calendar as Data.Time.Calendar.Days
import qualified Data.Time.LocalTime as Data.Time.LocalTime.Internal.ZonedTime
import qualified GHC.Base
import qualified GHC.Classes
import qualified GHC.Generics
import qualified GHC.Int
import qualified GHC.Show
import qualified GHC.Types
import qualified ElectionGuard.API.Guardian.Generated.Common

-- | Defines the data type for the schema GuardianBackup
-- 
-- 
data GuardianBackup = GuardianBackup {
  -- | election_partial_key_backups
  guardianBackupElectionPartialKeyBackups :: ([] GuardianBackupElectionPartialKeyBackups)
  -- | id
  , guardianBackupId :: Data.Text.Internal.Text
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.ToJSON GuardianBackup
    where toJSON obj = Data.Aeson.object ((Data.Aeson..=) "election_partial_key_backups" (guardianBackupElectionPartialKeyBackups obj) : (Data.Aeson..=) "id" (guardianBackupId obj) : [])
          toEncoding obj = Data.Aeson.pairs ((Data.Aeson..=) "election_partial_key_backups" (guardianBackupElectionPartialKeyBackups obj) GHC.Base.<> (Data.Aeson..=) "id" (guardianBackupId obj))
instance Data.Aeson.Types.FromJSON.FromJSON GuardianBackup
    where parseJSON = Data.Aeson.Types.FromJSON.withObject "GuardianBackup" (\obj -> (GHC.Base.pure GuardianBackup GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "election_partial_key_backups")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "id"))
-- | Defines the data type for the schema GuardianBackupElection_partial_key_backups
-- 
-- 
data GuardianBackupElectionPartialKeyBackups = GuardianBackupElectionPartialKeyBackups {
  
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.ToJSON GuardianBackupElectionPartialKeyBackups
    where toJSON obj = Data.Aeson.object []
          toEncoding obj = Data.Aeson.pairs ((Data.Aeson..=) "string" ("string" :: GHC.Base.String))
instance Data.Aeson.Types.FromJSON.FromJSON GuardianBackupElectionPartialKeyBackups
    where parseJSON = Data.Aeson.Types.FromJSON.withObject "GuardianBackupElectionPartialKeyBackups" (\obj -> GHC.Base.pure GuardianBackupElectionPartialKeyBackups)