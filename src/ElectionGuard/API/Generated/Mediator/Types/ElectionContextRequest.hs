-- CHANGE WITH CAUTION: This is a generated code file generated by https://github.com/Haskell-OpenAPI-Code-Generator/Haskell-OpenAPI-Client-Code-Generator.

{-# LANGUAGE OverloadedStrings #-}
{-# LANGUAGE DeriveGeneric #-}

-- | Contains the types generated from the schema ElectionContextRequest
module ElectionGuard.API.Generated.Mediator.Types.ElectionContextRequest where

import qualified Prelude as GHC.Integer.Type
import qualified Prelude as GHC.Maybe
import qualified Data.Aeson
import qualified Data.Aeson as Data.Aeson.Types
import qualified Data.Aeson as Data.Aeson.Types.FromJSON
import qualified Data.Aeson as Data.Aeson.Types.ToJSON
import qualified Data.Aeson as Data.Aeson.Types.Internal
import qualified Data.ByteString.Char8
import qualified Data.ByteString.Char8 as Data.ByteString.Internal
import qualified Data.Functor
import qualified Data.Scientific
import qualified Data.Text
import qualified Data.Text.Internal
import qualified Data.Time.Calendar as Data.Time.Calendar.Days
import qualified Data.Time.LocalTime as Data.Time.LocalTime.Internal.ZonedTime
import qualified GHC.Base
import qualified GHC.Classes
import qualified GHC.Generics
import qualified GHC.Int
import qualified GHC.Show
import qualified GHC.Types
import qualified ElectionGuard.API.Generated.Common

-- | Defines the data type for the schema ElectionContextRequest
-- 
-- A request to build an Election Context for a given election
data ElectionContextRequest = ElectionContextRequest {
  -- | description
  electionContextRequestDescription :: (GHC.Maybe.Maybe ElectionContextRequestDescription)
  -- | elgamal_public_key
  , electionContextRequestElgamalPublicKey :: Data.Text.Internal.Text
  -- | number_of_guardians
  , electionContextRequestNumberOfGuardians :: GHC.Integer.Type.Integer
  -- | quorum
  , electionContextRequestQuorum :: GHC.Integer.Type.Integer
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.ToJSON ElectionContextRequest
    where toJSON obj = Data.Aeson.object ((Data.Aeson..=) "description" (electionContextRequestDescription obj) : (Data.Aeson..=) "elgamal_public_key" (electionContextRequestElgamalPublicKey obj) : (Data.Aeson..=) "number_of_guardians" (electionContextRequestNumberOfGuardians obj) : (Data.Aeson..=) "quorum" (electionContextRequestQuorum obj) : [])
          toEncoding obj = Data.Aeson.pairs ((Data.Aeson..=) "description" (electionContextRequestDescription obj) GHC.Base.<> ((Data.Aeson..=) "elgamal_public_key" (electionContextRequestElgamalPublicKey obj) GHC.Base.<> ((Data.Aeson..=) "number_of_guardians" (electionContextRequestNumberOfGuardians obj) GHC.Base.<> (Data.Aeson..=) "quorum" (electionContextRequestQuorum obj))))
instance Data.Aeson.Types.FromJSON.FromJSON ElectionContextRequest
    where parseJSON = Data.Aeson.Types.FromJSON.withObject "ElectionContextRequest" (\obj -> (((GHC.Base.pure ElectionContextRequest GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "description")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "elgamal_public_key")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "number_of_guardians")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "quorum"))
-- | Defines the data type for the schema ElectionContextRequestDescription
-- 
-- 
data ElectionContextRequestDescription = ElectionContextRequestDescription {
  
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.ToJSON ElectionContextRequestDescription
    where toJSON obj = Data.Aeson.object []
          toEncoding obj = Data.Aeson.pairs ((Data.Aeson..=) "string" ("string" :: GHC.Base.String))
instance Data.Aeson.Types.FromJSON.FromJSON ElectionContextRequestDescription
    where parseJSON = Data.Aeson.Types.FromJSON.withObject "ElectionContextRequestDescription" (\obj -> GHC.Base.pure ElectionContextRequestDescription)