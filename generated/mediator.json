{
  "openapi": "3.0.2",
  "info": {
    "title": "electionguard-web-api",
    "version": "0.1.0"
  },
  "paths": {
    "/api/v1/election/constants": {
      "get": {
        "tags": [
          "Configure Election"
        ],
        "summary": "Get Election Constants",
        "description": "Return the constants defined for an election",
        "operationId": "get_election_constants_api_v1_election_constants_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/api/v1/election/context": {
      "post": {
        "tags": [
          "Configure Election"
        ],
        "summary": "Build Election Context",
        "description": "Build a CiphertextElectionContext for a given election",
        "operationId": "build_election_context_api_v1_election_context_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ElectionContextRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/election/validate/description": {
      "post": {
        "tags": [
          "Configure Election"
        ],
        "summary": "Validate Election Description",
        "description": "Validate an Election description or manifest for a given election",
        "operationId": "validate_election_description_api_v1_election_validate_description_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ValidateElectionDescriptionRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/key/election/combine": {
      "post": {
        "tags": [
          "Key Ceremony"
        ],
        "summary": "Combine Election Keys",
        "description": "Combine public election keys into a final one\n:return: Combine Election key",
        "operationId": "combine_election_keys_api_v1_key_election_combine_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CombineElectionKeysRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ElectionJointKey"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/ballot/cast": {
      "post": {
        "tags": [
          "Cast and Spoil"
        ],
        "summary": "Cast Ballot",
        "description": "Cast ballot",
        "operationId": "cast_ballot_api_v1_ballot_cast_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AcceptBallotRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/ballot/decrypt": {
      "post": {
        "tags": [
          "Tally"
        ],
        "summary": "Decrypt Ballots",
        "operationId": "decrypt_ballots_api_v1_ballot_decrypt_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DecryptBallotsRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/ballot/spoil": {
      "post": {
        "tags": [
          "Cast and Spoil"
        ],
        "summary": "Spoil Ballot",
        "description": "Spoil ballot",
        "operationId": "spoil_ballot_api_v1_ballot_spoil_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AcceptBallotRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/ballot/encrypt": {
      "post": {
        "tags": [
          "Encrypt Ballots"
        ],
        "summary": "Encrypt Ballots",
        "description": "Encrypt one or more ballots",
        "operationId": "encrypt_ballots_api_v1_ballot_encrypt_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EncryptBallotsRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/tally": {
      "post": {
        "tags": [
          "Tally"
        ],
        "summary": "Start Tally",
        "description": "Start a new tally of a collection of ballots",
        "operationId": "start_tally_api_v1_tally_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StartTallyRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/tally/append": {
      "post": {
        "tags": [
          "Tally"
        ],
        "summary": "Append To Tally",
        "description": "Append ballots into an existing tally",
        "operationId": "append_to_tally_api_v1_tally_append_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AppendTallyRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/tally/decrypt": {
      "post": {
        "tags": [
          "Tally"
        ],
        "summary": "Decrypt Tally",
        "description": "Decrypt a tally from a collection of decrypted guardian shares",
        "operationId": "decrypt_tally_api_v1_tally_decrypt_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DecryptTallyRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/tracker/words": {
      "post": {
        "tags": [
          "Utility"
        ],
        "summary": "Convert Tracker To Words",
        "description": "Convert tracker from hash to human readable / friendly words",
        "operationId": "convert_tracker_to_words_api_v1_tracker_words_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TrackerWordsRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/ping": {
      "get": {
        "tags": [
          "Utility"
        ],
        "summary": "Ping",
        "description": "Ensure API can be pinged",
        "operationId": "ping_api_v1_ping_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Ping Api V1 Ping Get",
                  "type": "string"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "AcceptBallotRequest": {
        "title": "AcceptBallotRequest",
        "type": "object",
        "properties": {
          "ballot": {
            "title": "Ballot"
          },
          "description": {
            "title": "Description"
          },
          "context": {
            "title": "Context"
          }
        }
      },
      "AppendTallyRequest": {
        "title": "AppendTallyRequest",
        "required": [
          "ballots"
        ],
        "type": "object",
        "properties": {
          "ballots": {
            "title": "Ballots",
            "type": "array",
            "items": {}
          },
          "description": {
            "title": "Description"
          },
          "context": {
            "title": "Context"
          },
          "encrypted_tally": {
            "title": "Encrypted Tally"
          }
        }
      },
      "CombineElectionKeysRequest": {
        "title": "CombineElectionKeysRequest",
        "required": [
          "election_public_keys"
        ],
        "type": "object",
        "properties": {
          "election_public_keys": {
            "title": "Election Public Keys",
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "DecryptBallotsRequest": {
        "title": "DecryptBallotsRequest",
        "required": [
          "encrypted_ballots",
          "shares"
        ],
        "type": "object",
        "properties": {
          "encrypted_ballots": {
            "title": "Encrypted Ballots",
            "type": "array",
            "items": {}
          },
          "shares": {
            "title": "Shares",
            "type": "object",
            "additionalProperties": {
              "type": "array",
              "items": {}
            }
          },
          "context": {
            "title": "Context"
          }
        }
      },
      "DecryptTallyRequest": {
        "title": "DecryptTallyRequest",
        "required": [
          "shares"
        ],
        "type": "object",
        "properties": {
          "encrypted_tally": {
            "title": "Encrypted Tally"
          },
          "shares": {
            "title": "Shares",
            "type": "object"
          },
          "description": {
            "title": "Description"
          },
          "context": {
            "title": "Context"
          }
        }
      },
      "ElectionContextRequest": {
        "title": "ElectionContextRequest",
        "required": [
          "elgamal_public_key",
          "number_of_guardians",
          "quorum"
        ],
        "type": "object",
        "properties": {
          "description": {
            "title": "Description"
          },
          "elgamal_public_key": {
            "title": "Elgamal Public Key",
            "type": "string"
          },
          "number_of_guardians": {
            "title": "Number Of Guardians",
            "type": "integer"
          },
          "quorum": {
            "title": "Quorum",
            "type": "integer"
          }
        },
        "description": "A request to build an Election Context for a given election"
      },
      "ElectionJointKey": {
        "title": "ElectionJointKey",
        "required": [
          "joint_key"
        ],
        "type": "object",
        "properties": {
          "joint_key": {
            "title": "Joint Key",
            "type": "string"
          }
        }
      },
      "EncryptBallotsRequest": {
        "title": "EncryptBallotsRequest",
        "required": [
          "ballots",
          "seed_hash"
        ],
        "type": "object",
        "properties": {
          "ballots": {
            "title": "Ballots",
            "type": "array",
            "items": {}
          },
          "seed_hash": {
            "title": "Seed Hash",
            "type": "string"
          },
          "nonce": {
            "title": "Nonce",
            "type": "string"
          },
          "description": {
            "title": "Description"
          },
          "context": {
            "title": "Context"
          }
        }
      },
      "HTTPValidationError": {
        "title": "HTTPValidationError",
        "type": "object",
        "properties": {
          "detail": {
            "title": "Detail",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ValidationError"
            }
          }
        }
      },
      "StartTallyRequest": {
        "title": "StartTallyRequest",
        "required": [
          "ballots"
        ],
        "type": "object",
        "properties": {
          "ballots": {
            "title": "Ballots",
            "type": "array",
            "items": {}
          },
          "description": {
            "title": "Description"
          },
          "context": {
            "title": "Context"
          }
        }
      },
      "TrackerWordsRequest": {
        "title": "TrackerWordsRequest",
        "required": [
          "tracker_hash"
        ],
        "type": "object",
        "properties": {
          "tracker_hash": {
            "title": "Tracker Hash",
            "type": "string"
          },
          "seperator": {
            "title": "Seperator",
            "type": "string",
            "default": "-"
          }
        }
      },
      "ValidateElectionDescriptionRequest": {
        "title": "ValidateElectionDescriptionRequest",
        "type": "object",
        "properties": {
          "schema_override": {
            "title": "Schema Override"
          },
          "description": {
            "title": "Description"
          }
        },
        "description": "A request to validate an Election Description"
      },
      "ValidationError": {
        "title": "ValidationError",
        "required": [
          "loc",
          "msg",
          "type"
        ],
        "type": "object",
        "properties": {
          "loc": {
            "title": "Location",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "msg": {
            "title": "Message",
            "type": "string"
          },
          "type": {
            "title": "Error Type",
            "type": "string"
          }
        }
      }
    }
  }
}
